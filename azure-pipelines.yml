# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
    github.oauthToken: 'b8f3a051222edd3342c3ca0d7c3abc25ba566142'
    webApp.name: 'testingdevopsnew'
    webApp.resourceGroup: 'MBV-CSP-NL-RG-DevOps'
    BuildConfiguration: 'release'

stages:
- stage: Build

  jobs:
  - job: Previewstaging
    continueOnError: false
    steps:

     - task: AzureCLI@2
       inputs:
        azureSubscription: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az webapp deployment slot create --name $(webApp.name) --resource-group $(webApp.resourceGroup) --slot staging-pr-$(System.PullRequest.PullRequestId)'
        addSpnToEnvironment: true

     - task: Docker@1
       displayName: 'Docker Build'
       inputs:
         containerregistrytype: 'Azure Container Registry'
         azureSubscriptionEndpoint: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         azureContainerRegistry: 'mbvcspnlcr.azurecr.io'
         command: 'Build an image'
         dockerFile: 'HelloWorld/Dockerfile'
         imageName: 'artifact:$(Build.BuildId)'

     - task: Docker@1
       displayName: 'Docker Push'
       inputs:
         containerregistrytype: 'Azure Container Registry'
         azureSubscriptionEndpoint: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         azureContainerRegistry: 'mbvcspnlcr.azurecr.io'
         command: 'Push an image'
         imageName: 'artifact:$(Build.BuildId)'

     - task: AzureRmWebAppDeployment@4
       displayName: Deploy to staging slot
       condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
       inputs:
         ConnectionType: 'AzureRM'
         azureSubscription: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         appType: 'webAppContainer'
         WebAppName: '$(webApp.name)'
         deployToSlotOrASE: true
         ResourceGroupName: '$(webApp.resourceGroup)'
         SlotName: 'staging-pr-$(System.PullRequest.PullRequestId)'
         DockerNamespace: 'mbvcspnlcr.azurecr.io'
         DockerRepository: 'artifact'
         DockerImageTag: '$(Build.BuildId)'

- stage: 'MainDeploy'
  pool:
      vmImage : windows-2019
  dependsOn: Build
  jobs:
  - deployment: WinAgent007
    displayName: main-Deploy
    # creates an environment if it doesn't exist
    environment: 'Prod'
    strategy:
      runOnce:
        deploy:
          steps:    
                - task: AzureRmWebAppDeployment@4
                  displayName: Deploy to staging slot
                  condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
                    appType: 'webAppContainer'
                    WebAppName: '$(webApp.name)'
                    DockerNamespace: 'mbvcspnlcr.azurecr.io'
                    DockerRepository: 'artifact'
                    DockerImageTag: '$(Build.BuildId)'