trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:
     - task: AzureCLI@2
       enabled: false
       displayName: Creation of webapp slot
       inputs:
        azureSubscription: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'az webapp deployment slot create --name $(webApp.name) --resource-group $(webApp.resourceGroup) --slot staging-pr-$(System.PullRequest.PullRequestId)'
        addSpnToEnvironment: true
        useGlobalConfig: true

     - task: Docker@1
       enabled: false
       displayName: 'Docker Build'
       inputs:
         containerregistrytype: 'Azure Container Registry'
         azureSubscriptionEndpoint: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         azureContainerRegistry: 'mbvcspnlcr.azurecr.io'
         command: 'Build an image'
         dockerFile: 'HelloWorld/Dockerfile'
         imageName: 'artifact:$(Build.BuildId)'

     - task: Docker@1
       enabled: false
       displayName: 'Docker Push'
       inputs:
         containerregistrytype: 'Azure Container Registry'
         azureSubscriptionEndpoint: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         azureContainerRegistry: 'mbvcspnlcr.azurecr.io'
         command: 'Push an image'
         imageName: 'artifact:$(Build.BuildId)'

     
     - task: AzureRmWebAppDeployment@3
       displayName: 'Azure App Service Deploy: testingdevopslast'
       inputs:
         azureSubscription: 'Azure_CSP_Maistering (6177cf18-f1c2-40c1-9ef5-dc935397a41f)'
         appType: 'applinux'
         WebAppName: 'testingdevopslast'
         DeployToSlotFlag: true
         ResourceGroupName: 'MBV-CSP-NL-RG-DevOps'
         DockerNamespace: mbvcspnlcr.azurecr.io
         DockerRepository: artifact
         DockerImageTag: 43921
         ImageSource: Registry
         SlotName: 'slot5'


     - task: PowerShell@2
       enabled: false
       displayName: Write Staging URL to PR as Commen
       condition: and(succeeded(), eq(variables['Build.Reason'], 'PullRequest'))
       env:
         GITHUB_OATH_TOKEN: $(github.oauthToken)
       inputs:
          targetType: 'inline'
          script: |
              $prNumber = $(System.PullRequest.PullRequestNumber)
              $prInfoUrl = 'https://api.github.com/repos/priyankanshetty/Helloworld/pulls/' + $prNumber
              $response = Invoke-RestMethod -URI $prInfoUrl
              $commentUrl = $response.issue_url + '/comments'
              Write-Output "P1 done"
              $authorizationHeaderValue = "token " +  $env:GITHUB_OATH_TOKEN
              $message = "Previewing url for PR - https://$(webApp.name)-staging-pr-" + $(System.PullRequest.PullRequestId) + ".azurewebsites.net/swagger/index.html"
              $body = '{"body":"' + $message + '"}'
              Invoke-RestMethod -Method 'Post' -Uri $commentUrl -Headers @{"Authorization" = $authorizationHeaderValue} -Body $body
              Write-Output "Added previewing url as comment to the pull request"

